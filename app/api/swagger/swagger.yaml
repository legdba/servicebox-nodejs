swagger: "2.0"
info:
  version: "2.0"
  title: Servicebox NodeJS
# basePath prefixes all resource paths 
basePath: /api/v2
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /echo/{message}:
    # binds a127 app logic to a route
    x-swagger-router-controller: echo
    get:
      description: Returns it's own message to the caller
      # used as the method name of the controller
      operationId: echo
      parameters:
        - name: message
          in: path
          description: The message to return back
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Message"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /echo/{message}/{delay}:
    # binds a127 app logic to a route
    x-swagger-router-controller: echo
    get:
      description: Returns it's own message to the caller
      # used as the method name of the controller
      operationId: delayedEcho
      parameters:
        - name: message
          in: path
          description: The message to return back
          required: true
          type: string
        - name: delay
          in: path
          description: The message to return back
          required: true
          type: number
          format: float
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Message"
        "422":
          description: invalid {delay}
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /env/vars:
    # binds a127 app logic to a route
    x-swagger-router-controller: env
    get:
      description: Returns all server OS environment variables
      # used as the method name of the controller
      operationId: vars
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ListOfString"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /env/vars/{name}:
    # binds a127 app logic to a route
    x-swagger-router-controller: env
    get:
      description: Returns {name} server OS environment variable
      # used as the method name of the controller
      operationId: vars
      parameters:
        - name: name
          in: path
          description: The name of the OS environment variable to return back
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ListOfString"
        "404":
          description: undefined variable
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /env/hostname:
    # binds a127 app logic to a route
    x-swagger-router-controller: env
    get:
      description: Returns it's own message to the caller
      # used as the method name of the controller
      operationId: hostname
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ListOfString"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /calc/fibo-nth/{n}:
    # binds a127 app logic to a route
    x-swagger-router-controller: calc
    get:
      description: Finding the nth term fibonacci sequence; this is computational intensive, especially with {n} greater than 40.
      # used as the method name of the controller
      operationId: calcFiboNthRest
      parameters:
        - name: n
          in: path
          description: therm to find
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/FiboNthResponse"
        "422":
          description: invalid {n}
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /calc/sum/{id}/{n}:
    # binds a127 app logic to a route
    x-swagger-router-controller: calc
    get:
      description: Add {n} to counter with id {id} and return the new value
      # used as the method name of the controller
      operationId: sum
      parameters:
        - name: id
          in: path
          description: counter id
          required: true
          type: string
        - name: n
          in: path
          description: value to add to counter
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Counter"
        "422":
          description: invalid {n} or {id}
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /heap/leak/{size}:
    # binds a127 app logic to a route
    x-swagger-router-controller: leak
    get:
      description: Cause {size} bytes of heap to leak
      # used as the method name of the controller
      operationId: leak
      parameters:
        - name: size
          in: path
          description: number of bytes of heap to leak
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/RetainedHeap"
        "422":
          description: invalid {size}
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /heap/free:
    # binds a127 app logic to a route
    x-swagger-router-controller: leak
    get:
      description: Cause all previously leaked heap bytes to be releases; they will become candidate to garbage collection
      # used as the method name of the controller
      operationId: free
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/RetainedHeap"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /health:
    # binds a127 app logic to a route
    x-swagger-router-controller: health
    get:
      description: Test if service is up and always return a "up" message.
      # used as the method name of the controller
      operationId: health
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Message"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /health/{f}:
    # binds a127 app logic to a route
    x-swagger-router-controller: health
    get:
      description: Test if service is up and return a "up" message with a {f} probability and an HTTP error otherwise.
      # used as the method name of the controller
      operationId: health_conditional
      parameters:
        - name: f
          in: path
          description: float number from 0 to 1; with 0 the service will always return an error with 1 it will always return "up"
          required: true
          type: number
          format: float
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Message"
        "422":
          description: invalid {f}
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# complex objects have schema definitions
definitions:
  ListOfString:
    type: object
    additionalProperties:
      type: 'string'
  Message:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  Counter:
    required:
      - id
      - value
    properties:
      id:
        type: string
      value:
        type: integer
        format: int32
  FiboNthResponse:
    required:
      - n
      - term
    properties:
      n:
        type: integer
        format: int32
      term:
        type: integer
        format: int32
  RetainedHeap:
    required:
      - retainedHeap
    properties:
      retainedHeap:
        type: integer
        format: int64
